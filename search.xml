<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown的一些学习笔记</title>
      <link href="/post/1.html"/>
      <url>/post/1.html</url>
      
        <content type="html"><![CDATA[<h2 id="一-关于标题"><a href="#一-关于标题" class="headerlink" title="一.关于标题"></a>一.关于标题</h2><p>Markdown的标题和HTML的标题一致,都有6个级别,md是通过”#”的个数来表示标题的级别,其中,一个”# “表示最大标题,对应于HTML的<code>&lt;h1&gt;</code>,类推,最小标题应该为6个”#”. 格式是在一行的开头放1到6个#加空格再加标题内容</p><p>常用的还有在标题下加三个及以上的=或者-分别表示一级标题和二级标题,但这里的Typora貌似用不了….</p><h2 id="二-关于正文"><a href="#二-关于正文" class="headerlink" title="二.关于正文"></a>二.关于正文</h2><p>始终保持顶格写,Markdown不提供首行缩进,缩格太多会将文本解析为代码块.如果想要像写作那般每段空两格,则需要从CSS入手.手动对<code>&lt;p&gt;           内容&lt;/p&gt;</code>进行缩进.</p><p>对于在非Typora软件下的两行紧挨(无留空行)顶格内容,上面那行写完后不要手贱按下太多空格,一个还好,两个便会被默认解析成”<code>&lt;br/&gt;</code>“标签,本来是空格,现在变成换行了.空2格换行的方式像我们这种高贵(bushi)的Typora破解版用户一般是不会用到的.所以,为了不出现问题,我们应该避免在一段的末尾空格.</p><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><p>Markdown中想要另起一段,不能简单的回车直接到下面邻近的一行,而是要空个一行才可以另起一段,这样才能解析为这是下一段,否则只是将两段内容简单的空格一下.好在使用Typora编辑时,回车会默认为我们想要换行,便自动为我们空了一行,完成了分段操作,这比较符合我们平时code习惯——-回车便换行.</p><h2 id="三-字体样式"><a href="#三-字体样式" class="headerlink" title="三.字体样式"></a>三.字体样式</h2><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><p>两个星号+内容+两个星号 (<strong>推荐</strong>)</p><p>两个下划线+内容+两个下划线</p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>一个星号+内容+一个星号</p><p>一个下划线+内容+一个下划线(<strong>推荐</strong>)</p><h3 id="粗斜体"><a href="#粗斜体" class="headerlink" title="粗斜体"></a>粗斜体</h3><p>上面两两组合即可,注意粗体在前斜体在后,如,<strong>两个星号</strong>+一个星号/<strong>下划线</strong>,两个下划线+一个星号/下划线.</p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>双波浪号+内容+双波浪号</p><p><del>我是傻逼</del></p><h2 id="四-列表"><a href="#四-列表" class="headerlink" title="四.列表"></a>四.列表</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>在文本前添加<strong>数字加点加空格</strong>便可以构成有序列表,值得注意的是,最终生成的列表前面的编号和前面的数字没有绝对关系,总是从<strong>第一个数字</strong>开始依次增加.所以,第一个数字的选择直接影响到后面的数字.</p><ol><li></li><li></li><li></li></ol><ol><li></li><li></li><li></li></ol><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>三种表达方式,在文本前加减号-,星号*,加号+再分别空格实现.</p><ul><li></li></ul><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><p>在有序列表或无序列表的基础上多了个复选框.</p><p>复选框的表示方式,中括号里面为单个空格表示未选中 [ ],中括号里为x表示选中.</p><ul><li>[ ] :  用 “-“+[空格]+”空格”表示</li><li>[x] :用”-“+[x]+”空格”表示</li></ul><h2 id="五-引用"><a href="#五-引用" class="headerlink" title="五.引用"></a>五.引用</h2><h3 id="单个引用"><a href="#单个引用" class="headerlink" title="单个引用"></a>单个引用</h3><p>是对一整段的引用,在需要引用的内容前面加上”&gt;”和空格.但在Typora下只需敲个”&gt;”即可.</p><blockquote><p>我被引用啦!</p><p>俺也一样!</p></blockquote><h3 id="引用嵌套"><a href="#引用嵌套" class="headerlink" title="引用嵌套"></a>引用嵌套</h3><p>一个引用块里面还可以引用其他段落.在段落的前面加多个”&gt;”即可</p><blockquote><p>这是一个引用</p><blockquote><p>这是另一个引用</p></blockquote></blockquote><h3 id="引用其他元素"><a href="#引用其他元素" class="headerlink" title="引用其他元素"></a>引用其他元素</h3><p>引用不只可以有段落,还可以存在列表,粗斜体等.</p><blockquote><ol><li><em>这是顺序列表引用</em></li></ol><ul><li><strong>这是无序列表引用</strong></li></ul></blockquote><h2 id="六-代码块"><a href="#六-代码块" class="headerlink" title="六.代码块"></a>六.代码块</h2><h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><p>使用一对反引号”``”来创建行内代码,被引起来内容的就是行内代码块  </p><p>如果内容需要包含反引号本身,可以使用两个反引号对加前后空格来创建.<code>`是这样` </code></p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>将文本每一行缩进至少4格或一个制表符,这些文本会变成代码块</p><p>​       <html>       </p><p>​       &lt;/html&gt;</p><h3 id="围栏式代码块-常用"><a href="#围栏式代码块-常用" class="headerlink" title="围栏式代码块(常用)"></a>围栏式代码块(常用)</h3><p>以三个单引号开头和结尾</p><p>以三个波浪线开头和结尾</p><p>围栏式代码块对于Typora用户来说使用起来很方便,只需键入三个单引号再回车即可生成围栏式代码块.</p><h2 id="七-分割"><a href="#七-分割" class="headerlink" title="七.分割"></a>七.分割</h2><p>连续三个或以上的*星号,-减号,_下划线这三种便可生成分割线</p><p>讲道理不太常用”-“减号,因为这容易诱发正文变成二级标题的问题,但由于Typora屏蔽了文本下三个减号相当于二级标题的生成方式,所以在Typora下我们可以放心大胆用减号作分割线,因为减号也相对于其它俩符合更顺手,这里不得不表扬一下Typora的人性化处理.大赞!</p><p>这是分割线</p><hr><h2 id="八-超链接"><a href="#八-超链接" class="headerlink" title="八.超链接"></a>八.超链接</h2><p>和html一样,一个可以点击的文字或图片,然后跳转到网站?其它Markdown页面?或是邮箱?</p><h3 id="链接到网站"><a href="#链接到网站" class="headerlink" title="链接到网站"></a>链接到网站</h3><p>先是一对[],把要点击的文字输入进去,然后在中括号外紧跟一对(),里面填入要跳转的网址.</p><p><a href="www.bilibili.com">b站</a></p><h3 id="链接到其他Markdown页面"><a href="#链接到其他Markdown页面" class="headerlink" title="链接到其他Markdown页面"></a>链接到其他Markdown页面</h3><p>和上面差不多,只不过小括号()内是./标题</p><p><a href="./代码演示">代码演示</a></p><h3 id="无标签链接"><a href="#无标签链接" class="headerlink" title="无标签链接"></a>无标签链接</h3><p>只有一对尖括号&lt;&gt;,里面可以填网址,邮箱</p><p><a href="https://www.shenfendaquan.com/">https://www.shenfendaquan.com/</a></p><p><a href="&#x6d;&#x61;&#x69;&#108;&#116;&#111;&#x3a;&#122;&#104;&#x79;&#49;&#48;&#x30;&#x36;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;">&#122;&#104;&#x79;&#49;&#48;&#x30;&#x36;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a></p><p>当然,这些待跳转的东西都可以加入相关描述,上述添加都是在输入网址,邮箱,标题的那个括号里进行,在完成网址,邮箱,标题的输入后,只需空一格然后双引号””,将描述文字引起来即可.</p><h3 id="自动超链接"><a href="#自动超链接" class="headerlink" title="自动超链接"></a>自动超链接</h3><p>有些Markdown解析器还可以自动解析代码中的链接,并生成无标签链接.</p><p>如果不希望自动转换,只需一对反引号将网址引起来生成行内代码块,这样就不会自动转换了.</p><p><a href="https://www.shenfendaquan.com/">https://www.shenfendaquan.com/</a></p><p><code>https://www.shenfendaquan.com/</code> </p><h3 id="和其他元素配合"><a href="#和其他元素配合" class="headerlink" title="和其他元素配合"></a>和其他元素配合</h3><p>超链接可以和粗体,斜体,删除线,代码块一块使用</p><p>只对中括号使用,可在中括号内使用,对其文字加符号,也可在中括号外使用,对中括号加符号,都是对显示的文字进行个性化表示</p><p>来个”被删除”链接:</p><p><a href="https://www.404.com/" title="Yes!"><del>被删除了吗</del></a></p><p>再来个粗体链接</p><p><a href="./标题" title="俺不知道跳往哪里">这是一个粗体链接</a></p><p>来个代码块链接</p><p><a href="./标题" title="快快快"><code>一块块的</code></a></p><h2 id="九-图片"><a href="#九-图片" class="headerlink" title="九.图片"></a>九.图片</h2><p>需要注意的是,虽然md支持添加图片的方式很方便,但在实际部署到服务器后图片呈现的效果往往差强人意,图片加载不出来,解决方法是搭配图床使用,将本地图片上传到如阿里云OSS等云服务器中并返回url,这样写好的md文件可以任意在移动端或桌面端读取且图片不会崩.</p><h3 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h3><p>与超链接的[内容]+(网址)相似,区别是在中括号[]前添加一个感叹号和()里应该是图片的链接.</p><p><img src="https://zhy10086.oss-cn-hangzhou.aliyuncs.com/img20230205163419.png" alt="这是一张404图片"></p><h3 id="带链接的图片"><a href="#带链接的图片" class="headerlink" title="带链接的图片"></a>带链接的图片</h3><p>言下之意就是可以跳转的图片,回忆超链接格式,[内容]+(网址/本地链接),既然是点击图片便可跳转,所以中括号的内容应该是图片,又因为表示图片的格式是!+[描述文字]+(图片链接),所以两者结合后便是[!+[描述文字+(图片链接)]]+(网址/本地链接)</p><p><a href="http://www.404.com"><img src="https://zhy10086.oss-cn-hangzhou.aliyuncs.com/img20230205163419.png" alt="要不跳一下?"></a></p><h2 id="十-Emoji表情"><a href="#十-Emoji表情" class="headerlink" title="十.Emoji表情"></a>十.Emoji表情</h2><p>在Markdown里使用Emoji表情有两种方法,一种是直接输入Emoji表情,另一种是使用Emoji表情短码,什么是表情短码<code>emojishartcodes</code>,很简单,就是把你想表达的某种感情的单词放在俩冒号之间就是了,比如你想表达微笑,那就是”smile”,再用冒号扩住它,就生成我们熟悉的emoji表情了,:smile:</p><p>这种方法很显然不太符合我们平时使用习惯,还是得选着用才习惯,但我们得知道这种不常用的方法,因为有些软件是没有提供emoji选择的界面的,尽管它能支持emoji表情,这种时候我们便可以使用表情短码来表示了.</p><h2 id="十一-内嵌HTML和React"><a href="#十一-内嵌HTML和React" class="headerlink" title="十一.内嵌HTML和React"></a>十一.内嵌HTML和React</h2><p>Markdown是支持Html语言的,所以我们可以将它当作编辑器直接按照H5语法编程,扩展的MarkdownX语法中可以使用React的JSX语法.</p><h2 id="十二-表格"><a href="#十二-表格" class="headerlink" title="十二.表格"></a>十二.表格</h2><p>这里我们直接用Typora为我们包装好的接口,直接用就完事了,它那个还要一格一格弄太麻烦了.</p><h2 id="十三-脚注"><a href="#十三-脚注" class="headerlink" title="十三.脚注"></a>十三.脚注</h2><p>脚注类似于参考文献或补充说明,统一出现的文档的最后,可在文中任意位置引用.</p><p>脚注的定义语法为:<sup><a href="#fn_" id="reffn_"></a></sup>:</p><p>脚注的引用语法为:<sup><a href="#fn_" id="reffn_"></a></sup></p><p>这俩就是,有冒号的放文章或页的末尾,而没冒号的则是文章中,要对啥作注就直接把它中括号起来然后它在前面加个尖号.</p><h3 id="行内脚注"><a href="#行内脚注" class="headerlink" title="行内脚注"></a>行内脚注</h3><p>这个是普通脚注的升级版,不是所有解析器都支持行内脚注.</p><p>行内脚注不需要显示声明,只需要在需要脚注的地方直接使用就可以了,解析器会把内容提取出来放到文末.</p><p>适用于注释不是很多的情况.</p><h3 id="常量脚注"><a href="#常量脚注" class="headerlink" title="常量脚注"></a>常量脚注</h3><p>脚注还可以作为类似编程中常量的用法.比如下面的Markdown代码里面有一张图片,这张图片的地址非洲长,如果直接放到代码里面会影响可读性.我们可以把图片地址放到脚注里面,再在需要的地方引用.</p><p>有点类似#define,好处是在一篇文章里引用多次同一个图片时可以直接将该图片地址设为常量脚注多次调用.</p><p>比如说我们把图片地址放到脚注里面,代码会简洁得多.常量脚注的声明方式和引用脚注相似.[名称]: 内容</p><p><img src="404" alt="图片"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/post/30628.html"/>
      <url>/post/30628.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image.baidu.com/search/detail?z=0&amp;word=%E5%AE%A0%E7%89%A9%E5%9B%BE%E7%89%87&amp;hs=0&amp;pn=7&amp;spn=0&amp;di=&amp;pi=227266&amp;rn=&amp;tn=baiduimagedetail&amp;is=&amp;ie=utf-8&amp;oe=utf-8&amp;cs=4069854689%2C43753836&amp;os=&amp;simid=&amp;adpicid=0&amp;lpn=0&amp;fr=albumsdetail&amp;fm=&amp;ic=0&amp;sme=&amp;cg=&amp;bdtype=&amp;oriquery=&amp;objurl=https%3A%2F%2Ft7.baidu.com%2Fit%2Fu%3D4069854689%2C43753836%26fm%3D193%26f%3DGIF&amp;fromurl=ipprf_z2C%24qAzdH3FAzdH3Fooo_z%26e3Bev2_z%26e3Bv54AzdH3Fv6jwptejAzdH3F8ad0c0a9ln&amp;gsm=&amp;islist=&amp;querylist=&amp;album_tab=%E5%8A%A8%E7%89%A9&amp;album_id=688" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
